#!/usr/bin/env groovy


pipeline {
  agent any
  environment{
      RCTL_API_KEY=credentials('rafay_api_key')
      RCTL_API_SECRET=credentials('rafay_secret_key')
      RCTL_REST_ENDPOINT="console.stage.rafay.dev"
      RCTL_PROJECT="vijayspractice"
      WORKLOAD_NAME="wordpress-demo"
      WORKLOAD_NAMESPACE="wordpress"
  }
  stages {
   stage("Checkout Code") {
      steps {
            checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/vijays-rafay/rafay-cicd-helpers']]])
      }
    }

   stage("Create and Publish Workload") {
      steps {
                sh label: '', script: '''#!/bin/bash
            rm -f rctl-linux-amd64.tar.bz2
            wget -q https://s3-us-west-2.amazonaws.com/rafay-prod-cli/publish/rctl-linux-amd64.tar.bz2
            tar -xf rctl-linux-amd64.tar.bz2
            chmod 0755 rctl
            LookupWorkload () {
            local workload match="$1"
            shift
            for workload; do [[ "$workload" == "$match" ]] && return 0; done
            return 1
            }
            ./rctl get namespace > /tmp/namespace
            grep -i $WORKLOAD_NAMESPACE /tmp/namespace > /dev/null 2>&1
            if [ $? -eq 1 ];
            then
                ./rctl create namespace -f ./workload/helm3/manifests/namespace-spec.yaml
                sleep 10
                ./rctl publish namespace $WORKLOAD_NAMESPACE
                NS_CHECK_CNT=1
                while /bin/true
                do
                NAMESPACE_HEALTH=$(./rctl get namespace $WORKLOAD_NAMESPACE -o json | jq '.status.deployedClusters[].reason' | grep -v '\"deployed\"'| wc -l) 
                if [ $NS_CHECK_CNT -ge 50 ]
                then
                echo " !! Unable to publish namespace $WORKLOAD_NAMESPACE to clusters !!" && exit 1
                fi
                if [ $NAMESPACE_HEALTH -eq 0 ]
                then
                break
                else
                NS_CHECK_CNT=$(($NS_CHECK_CNT + 1))
                fi
                sleep 10
                done
            fi
      
            rm /tmp/namespace
            wl_tmp=`./rctl get workload -o json | jq '.result[]|.name' |cut -d'"' -f2`
            WL_TMP_ARRAY=( $wl_tmp )
            LookupWorkload $WORKLOAD_NAME "${WL_TMP_ARRAY[@]}"
            if [ $? -eq 1 ];
            then
                ./rctl create workload ./workload/helm3/manifests/workload-spec.yaml
            else
                ./rctl update workload ./workload/helm3/manifests/workload-spec.yaml
            fi
            ./rctl publish workload $WORKLOAD_NAME
            workload_status="Not Ready"
            workload_status_iterations=1
            while [ "$workload_status" != "Ready" ];
            do
                workload_status=`./rctl status workload $WORKLOAD_NAME -o json|jq .result[].status|tr -d '"'`
                echo $workload_status
                sleep 30
                if [ $workload_status_iterations -ge 30 ];
                then
                    break
                fi
                if [ "$workload_status" = "Failed" ];
                then
                    echo "Workload Deployment Failed" && exit 1
                    break
                fi
                workload_status_iterations=$((workload_status_iterations+1))
            done
            '''
      }
    }
  }
}

