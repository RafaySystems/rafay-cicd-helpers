#!/usr/bin/env groovy


pipeline {
  agent any
  environment{
      RCTL_API_KEY=credentials('rafay_api_key')
      RCTL_API_SECRET=credentials('rafay_secret_key')
      RCTL_REST_ENDPOINT="console.rafay.dev"
      RCTL_PROJECT="defaultproject"
  }
  stages {
   stage("Checkout Code") {
      steps {
            checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/RafaySystems/rafay-cicd-helpers']]])
      }
    }

   stage("Create and Publish Workload") {
      steps {
            sh label: '', script: '''#!/bin/bash
            rm -f rctl-linux-amd64.tar.bz2
            wget -q https://s3-us-west-2.amazonaws.com/rafay-prod-cli/publish/rctl-linux-amd64.tar.bz2
            tar -xf rctl-linux-amd64.tar.bz2
            chmod 0755 rctl
            ./rctl namespace list > /tmp/namespace
            grep -i $WORKLOAD_NAMESPACE /tmp/namespace > /dev/null 2>&1
            if [ $? -eq 1 ];
            then
                ./rctl namespace create ./worklaod/k8s-yaml/namespace-specs.yaml
            fi
            rm /tmp/namespace
            ./rctl workload list > /tmp/workload
            grep -i $WORKLOAD_NAME /tmp/workload > /dev/null 2>&1
            if [ $? -eq 1 ];
            then
                ./rctl workload create ./worklaod/k8s-yaml/workload-spec.yaml
            else
                ./rctl workload update ./worklaod/k8s-yaml/workload-spec.yaml
            fi
            rm /tmp/workload
            ./rctl workload publish $WORKLOAD_NAME
            workload_status="Not Ready"
            workload_status_iterations=1
            while [ "$workload_status" != "Ready" ];
            do
                workload_status=`./rctl workload status $WORKLOAD_NAME -o json|jq .result[].status|tr -d '"'`
                echo $workload_status
                sleep 30
                if [ $workload_status_iterations -ge 30 ];
                then
                    break
                fi
                if [ "$workload_status" = "Failed" ];
                then
                    echo "Workload Deployment Failed"
                    break
                fi
                workload_status_iterations=$((workload_status_iterations+1))
            done
            '''
      }
    }
  }
}

